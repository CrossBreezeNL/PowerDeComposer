<!--
    Copyright (c) 2022 CrossBreeze
   
    This file is part of PowerDeComposer.
   
    PowerDeComposer is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the 
    Free Software Foundation, either version 3 of the License, or (at your option) any 
    later version.
   
    PowerDeComposer is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
   
    You should have received a copy of the GNU General Public License
    along with PowerDeComposer.  If not, see <https://www.gnu.org/licenses/>.
         
    Contributors:
      Harmen Wessels - CrossBreeze
      Willem Otten - CrossBreeze      
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.x-breeze.powerdecomposer</groupId>
	<artifactId>PowerDeComposer</artifactId>
	<version>1.6.1</version>
	<packaging>jar</packaging>
	<name>CrossBreeze PowerDeComposer</name>
	<description>PowerDeComposer is a utility that enables integrating PowerDesigner with the version control system of your choice.</description>
	<url>http://http://powerdecomposer.x-breeze.com</url>
	<licenses>
		<license>
			<name>The GNU General Public License, Version 3</name>
			<url>https://www.gnu.org/licenses/gpl-3.0.html</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Willem Otten</name>
			<email>Willem@x-breeze.com</email>
			<organization>CrossBreeze</organization>
			<organizationUrl>http://crossbreeze.nl</organizationUrl>
		</developer>
		<developer>
			<name>Harmen Wessels</name>
			<email>Harmen@x-breeze.com</email>
			<organization>CrossBreeze</organization>
			<organizationUrl>http://crossbreeze.nl</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/CrossBreezeNL/PowerDeComposer.git</connection>
		<developerConnection>scm:git:https://github.com/CrossBreezeNL/PowerDeComposer.git</developerConnection>
		<url>https://github.com/CrossBreezeNL/PowerDeComposer</url>
	</scm>

	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<cucumber.version>7.11.2</cucumber.version>
		<junit.version>5.9.2</junit.version>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-bom</artifactId>
				<version>${cucumber.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- VTD XML for fast XML stuff. -->
		<dependency>
			<groupId>com.ximpleware</groupId>
			<artifactId>vtd-xml</artifactId>
			<version>2.13.4</version>
		</dependency>
		<!-- Apache Commons IO for BOMInputStream. -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- Apache Commons Text for XML escape/unescaping. -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-text</artifactId>
		    <version>1.11.0</version>
		</dependency>
		<!-- JAX-B for the config. -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>4.0.2</version>
		</dependency>

		<!-- Test dependencies. -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<!-- Build an executable JAR -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.3.0</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>com.xbreeze.xml.Executor</mainClass>
								</manifest>
							</archive>
						</configuration>
					</plugin>
					<plugin>
						<!-- build jar file with sources (Sonatype requirement) -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Build jar file with javadocs (Sonatype requirement) -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.5.0</version>
						<configuration>
							<show>protected</show>
							<failOnError>false</failOnError>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Sign artifacts with gpg (Sonatype requirement) -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<passphraseServerId>pgp</passphraseServerId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Generate jar with dependencies. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<id>execution</id>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<mainClass>
								com.xbreeze.xml.Executor
							</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>

			<!-- Generate JAX-B schema file -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>schemagen</id>
						<goals>
							<goal>schemagen</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${basedir}/src/main/resources/com/xbreeze/xml/config/</outputDirectory>
					<clearOutputDir>false</clearOutputDir>
					<generateEpisode>false</generateEpisode>
					<sources>
						<source>src/main/java/com/xbreeze/xml/config/PowerDeComposerConfig.java</source>
						<source>src/main/java/com/xbreeze/xml/decompose/config</source>
					</sources>
				</configuration>
			</plugin>
			
			<!-- Test reporting. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0</version>
                <executions>
                    <execution>
                        <id>test-execution</id>
						<phase>test</phase>
                    </execution>
                </executions>
				<configuration>
					<reportFormat>plain</reportFormat>
					<includes>
						<include>**/*UnitTest.java</include>
					</includes>
					<encoding>${project.build.sourceEncoding}</encoding>
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>